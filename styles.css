/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl
):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}


/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not(
  [fill="none"],
  [fill^="url"]
)) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not(
  [stroke="none"],
  [stroke^="url"]
)) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

 @font-face {
    font-family: 'Roboto';
    src: url(./fonts/Roboto-Medium.woff2);
    font-style: normal;
    font-weight: 500;
    font-display: swap;
}

@font-face {
    font-family: 'Roboto';
    src: url(./fonts/Roboto-Regular.woff2);
    font-style: normal;
    font-weight: 400;
    font-display: swap;
}

@font-face {
    font-family: 'Ubuntu';
    src: url(./fonts/Ubuntu-Light.woff2);
    font-style: normal;
    font-weight: 300;
    font-display: swap;
}

:root {
  --color-white: #FFFFFF;
  --color-black: #000000;
  --color-accent: #6C63FF;
  --color-gray: #b3b3b3;
  --color-accent-hover: #DAD9FB;
  --color-label-checked: #B5B5BD;

  --transition-duration: 0.2s;

  --border-task: 1px solid var(--color-accent);
  --border-menu: 1px solid var(--color-gray);
  --border-radius: 8px;

  --input-height: 40px;
}


body {
  display: flex;
  justify-content: center;
  align-items: start;
  min-height: 100vh;
  padding: 150px 30px;
  font-family: 'Roboto', sans-serif;
  background-color: var(--color-white);
}

input,
label,
button {
  transition-duration: var(--transition-duration);
}

:focus-visible {
  outline: 2px dashed var(--color-black);
  outline-offset: 4px;
  transition-duration: 0s !important;
}

.todo {
  display: flex;
  flex-direction: column;
  row-gap: 20px;
  width: 100%;
  max-width: 400px;
  min-height: 200px;
  padding: 20px;
  background-color: var(--color-white);
  border: var(--border-menu);
  border-radius: var(--border-radius);
  
}

.todo__title {
  text-align: center;
  line-height: 1.2;
  letter-spacing: -0.02em;
}

.todo__form {
  display: flex;
  column-gap: 16px;
  width: 100%;
  justify-content: center;
}

.todo__info {
  display: flex;
  justify-content: space-between;
  align-items: center;
  column-gap: 16px;
  font-weight: 500;
}

.todo__delet-all-button {
  padding: 0;
  background-color: transparent;
  border: none;

  &:hover {
    color: var(--color-accent);
  }

  &:not(.is-visible) {
    opacity: 0;
    visibility: hidden;
  }
}

.todo__list,
.todo__empty-message {
  &:empty {
    display: none;
  }
}

.todo__list {
  --todo-list-RowGap: 8px;

  display: grid;
  row-gap: var(--todo-list-RowGap);
}

.todo__empty-message {
  text-align: center;
  color: var(--color-black);
}

.button {
  display: inline-flex;
  align-items: center;
  height: var(--input-height);
  padding: 13px;
  color: var(--color-white);
  background-color: var(--color-accent);
  border: none;
  border-radius: var(--border-radius);

  &:hover {
    color: var(--color-accent);
    background-color: transparent;
    border: var(--border-task);
  }

  &:active {
    scale: 1.05;
  }
}

.todo__form-input {
  width: 100%;
  height: var(--input-height);
  padding-inline: 16px;
  background-color: transparent;
  border-radius: var(--border-radius);
  border: var(--border-task);
  
  &:hover,
  &:focus {
    color: var(--color-black);
  }

  &:focus {
    background-color: var(--color-accent-hover);
    outline: none;
  }
}

.todo__item {
  display: flex;
  align-items: center;
  column-gap: 12px;
  padding-left: 10px;
  border-radius: var(--border-radius);
  border: var(--border-task);
  transition-duration: var(--transition-duration);

  &:hover {
    background-color: var(--color-accent-hover);
  }

  &.is-disappearing {
    opacity: 0;
    translate: 0 -75%;
    transition-duration: calc(var(--transition-duration) * 2);
    pointer-events: none;

    & ~ .todo__item {
      translate: 0 calc((100% + var(--todo-list-RowGap)) * -1);
      transition-delay: var(--transition-duration);
      pointer-events: none;
      transition-duration: var(--transition-duration);
    }
  }


}

.todo__item-delete-button {
  flex-shrink: 0;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 44px;
  height: 44px;
  margin-left: auto;
  padding: 0;
  color: var(--color-accent);
  background-color: transparent;
  border: none;
  border-radius: inherit;

  &:hover {
    color: var(--color-white);
    background-color: var(--color-accent);
  }

  &:active {
    scale: 1.1;
  }

  * {
    pointer-events: none;
  }
}

.todo__item-checkbox {
  flex-shrink: 0;
  appearance: none;
  position: relative;
  width: 20px;
  height: 20px;
  margin: 0;
  border: 1px solid var(--color-accent);
  border-radius: 4px;

  &:not(:checked) {
    &::after {
      opacity: 0;
    }
  }

  &:checked {
    background-color: var(--color-accent);
    border-color: var(--color-accent);

    & + .todo__item-label {
      color: var(--color-label-checked);
      text-decoration: line-through;
    }
  }

  &::after {
    content: '';
    position: absolute;
    top: 40%;
    left: 50%;
    translate: -50% -50%;
    width: 13px;
    height: 13px;
    background: url(./img/Rectangle\ 18.svg) center/contain no-repeat;
  }
}

.todo__item-label {
  width: 100%;
  pointer-events: none;
}